{
  "root": true,
  "reportUnusedDisableDirectives": true,
  "extends": [
    "prettier"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:import/typescript",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/recommended"
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": [
          "warn",
          {
            "allowArgumentsExplicitlyTypedAsAny": true
          }
        ],
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/unbound-method": "off",
        "@angular-eslint/sort-ngmodule-metadata-arrays": "error",
        "@angular-eslint/component-class-suffix": "off",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "style": "camelCase"
          }
        ],
        "dot-notation": "error",
        "id-denylist": [
          "error",
          "any",
          "Number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined"
        ],
        "no-shadow": "error",
        "no-unused-expressions": "error",
        "quotes": [
          "error",
          "single"
        ],
        "semi": "error",
        "import/named": "off",
        "import/no-unresolved": "off",
        "import/order": [
          "error",
          {
            "newlines-between": "always",
            // <-- Changed configuration here to get proper imports order I want
            "groups": [
              // <-- Changed configuration here to get proper imports order I want
              "internal",
              // angular imports - configured in 'import/internal-regex'
              "unknown",
              // rxjs imports
              "external",
              // all libraries imports - configured in 'import/external-module-folders'
              "builtin",
              // internal-library imports
              [
                "parent",
                "sibling",
                "index"
              ]
              // relative paths
            ],
            "pathGroups": [
              // <-- Changed configuration here to get proper imports order I want
              {
                "pattern": "rxjs",
                "group": "unknown"
              },
              {
                "pattern": "rxjs/**",
                "group": "unknown"
              },
              {
                "pattern": "dfx**",
                "group": "builtin"
              },
              {
                "pattern": "dfts**",
                "group": "builtin"
              }
            ],
            "pathGroupsExcludedImportTypes": [
              "type",
              "object"
            ]
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ],
  "settings": {
    "import/internal-regex": "@angular/"
  }
}
