image: node:lts-gallium

stages:
  - build
  - deploy

build-release:
  only:
    - tags
  except:
    - branches
  stage: build
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/
  script:
    - npm install --force --loglevel=error --no-progress
    - npm run ngcc # Run npm-script ngcc, if ng build does it, the ci breaks (not enough memory)
    - npm run build:prod
    - cd dist/
    - ls -al

build-testing:
  only:
    - develop
  stage: build
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/
  script:
    - npm install --force --loglevel=error --no-progress
    - npm run ngcc # Run npm-script ngcc, if ng build does it, the ci breaks (not enough memory)
    - npm run build:testing
    - cd dist/
    - ls -al

build-dev:
  stage: build
  only:
    - branches
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/
  script:
    - npm install --force  --loglevel=error --no-progress
    - npm run ngcc # Run npm-script ngcc, if ng build does it, the ci breaks (not enough memory)
    - npm run build:dev
    - cd dist/
    - ls -al

deploy-release:
  tags:
    - 'dafnik'
  stage: deploy
  dependencies:
    - build-release
  only:
    - tags
  except:
    - branches
  script:
    - apt-get update -qq && apt-get install -y -qq zip openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - version=$(git describe --tags $(git rev-list --tags --max-count=1))
    - cd dist/
    - zip -r "WaiterRobot-Web-${version}.zip" ./WaiterRobot-Web >> /dev/null
    - cp "WaiterRobot-Web-${version}.zip" WaiterRobot-Web-latest.zip
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./WaiterRobot-Web-latest.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/WaiterRobot/Web-Releases/ > /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR "WaiterRobot-Web-${version}.zip" $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/WaiterRobot/Web-Releases/ > /dev/null

deploy-dev:
  tags:
    - 'dafnik'
  stage: deploy
  only:
    - develop
  dependencies:
    - build-dev
  script:
    - apt-get update -qq && apt-get install -y -qq zip openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - cd dist/
    - zip -r WaiterRobot-Web-dev.zip ./WaiterRobot-Web >> /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./WaiterRobot-Web-dev.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/WaiterRobot/Web-Releases/ > /dev/null

deploy-testing:
  tags:
    - kaupis
  stage: deploy
  dependencies:
    - build-testing
  only:
    - develop
  script:
    - apt-get update -qq && apt-get install -y -qq zip openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - echo "$SSH_DEMO_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - cd dist/
    - zip -r WaiterRobot-Web-testing.zip ./WaiterRobot-Web >> /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./WaiterRobot-Web-testing.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/WaiterRobot/Web-Releases/ > /dev/null
    - ssh -o StrictHostKeyChecking=no -o LogLevel=ERROR $SSH_DEMO_USERNAME@$SSH_DEMO_HOST -p $SSH_DEMO_PORT "cd /opt/waiterrobot-web && ./frontend.sh -v dev -f" >> /dev/null
