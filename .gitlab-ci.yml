image: node:latest

stages:
  - build
  - deploy

build-release:
  only:
    - tags
  except:
    - branches
  stage: build
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/
  script:
    - npm install --loglevel=error --no-progress
    - npm run ngcc # Run npm-script ngcc, if ng build does it, the ci breaks (not enough memory)
    - mkdir -p dist/WaiterRobot-Web/ # Create dist folder, Angular sometimes does not do it
    - ./node_modules/@angular/cli/bin/ng build --progress false --configuration production
    - cd dist/
    - ls -al

build-dev:
  only:
    - branches
  except:
    - tags
  stage: build
  artifacts:
    paths:
      - dist/
  cache:
    paths:
      - node_modules/
  script:
    - npm install --loglevel=error --no-progress
    - npm run ngcc # Run npm-script ngcc, if ng build does it, the ci breaks (not enough memory)
    - mkdir -p dist/WaiterRobot-Web/ # Create dist folder, Angular sometimes does not do it
    - ./node_modules/@angular/cli/bin/ng build --progress false --configuration testing
    - cd dist/
    - ls -al

deploy-dev:
  stage: deploy
  dependencies:
    - build
  only:
    - develop
  script:
    - apt-get update -qq && apt-get install -y -qq zip openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - echo "$SSH_TESTING_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - cd dist/
    - zip -r WaiterRobot-Web-dev.zip ./WaiterRobot-Web >> /dev/null
    - ssh -o StrictHostKeyChecking=no -o LogLevel=ERROR $SSH_TESTING_USERNAME@$SSH_TESTING_HOST -p $SSH_TESTING_PORT "./frontend -v dev" >> /dev/null

deploy-release:
  stage: deploy
  dependencies:
    - build
  only:
    - tags
  except:
    - branches
  script:
    - apt-get update -qq && apt-get install -y -qq zip openssh-client >> /dev/null
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - version=$(git describe --tags $(git rev-list --tags --max-count=1))
    - cd dist/
    - zip -r "WaiterRobot-Web-${version}.zip" ./WaiterRobot-Web >> /dev/null
    - cp "WaiterRobot-Web-${version}.zip" WaiterRobot-Web-latest.zip
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./WaiterRobot-Web-latest.zip $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/WaiterRobot/Web-Releases/ > /dev/null
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR "WaiterRobot-Web-${version}.zip" $SSH_USERNAME@$SSH_HOST:/var/www/datepoll-share/WaiterRobot/Web-Releases/ > /dev/null
