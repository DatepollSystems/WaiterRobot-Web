name: Testing

on:
  push:
    branches:
      - '*' # matches every branch that doesn't contain a '/'
      - '*/*' # matches every branch containing a single '/'
      - '**' # matches every branch
      - '!main'

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-prod:
    name: Build prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node and pnpm
        uses: dafnik/setup-node-pnpm@v2
        with:
          install: true

      - name: build
        run: pnpm build:prod

  build-lava:
    name: Build lava
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node and pnpm
        uses: dafnik/setup-node-pnpm@v2
        with:
          install-ignore-scripts: true

      - name: build
        run: |
          chmod +x ./tools/buildLava.sh
          ./tools/buildLava.sh

      - uses: actions/upload-artifact@v3
        name: upload artifact
        with:
          name: WaiterRobot-Web-lava
          path: ./dist/WaiterRobot-Web
          retention-days: 1

  publish-lava:
    needs: [build-lava]
    name: Publish lava
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: WaiterRobot-Web-lava
          path: ./dist/WaiterRobot-Web

      - name: make zip
        run: |
          cd dist/
          ls -la
          zip -r WaiterRobot-Web-lava.zip ./WaiterRobot-Web >> /dev/null
          cd -

      - name: publish build to release server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./dist/WaiterRobot-Web-lava.zip
          remote: /var/www/datepoll-share/WaiterRobot/Web-Releases/WaiterRobot-Web-lava.zip
          host: ${{ secrets.RELEASES_SSH_HOST }}
          port: ${{ secrets.RELEASES_SSH_PORT }}
          username: ${{ secrets.RELEASES_SSH_USER }}
          privateKey: ${{ secrets.RELEASES_SSH_PRIVATE_KEY }}

  deploy-lava:
    needs: [publish-lava]
    name: Deploy lava
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: fetching new version on lava server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.LAVA_SSH_HOST }}
          username: ${{ secrets.LAVA_SSH_USER }}
          key: ${{ secrets.LAVA_SSH_PRIVATE_KEY }}
          port: ${{ secrets.LAVA_SSH_PORT }}
          script: cd /opt/waiterrobot-web && ./frontend.sh -v lava -f -c -o

  build-localfire:
    name: Build localfire
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node and pnpm
        uses: dafnik/setup-node-pnpm@v2
        with:
          install-ignore-scripts: true

      - name: build
        run: |
          chmod +x ./tools/buildLocalfire.sh
          ./tools/buildLocalfire.sh

      - uses: actions/upload-artifact@v3
        name: upload artifact
        with:
          name: WaiterRobot-Web-localfire
          path: ./dist/WaiterRobot-Web
          retention-days: 1

  publish-localfire:
    needs: [build-localfire]
    name: Publish localfire
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: WaiterRobot-Web-localfire
          path: ./dist/WaiterRobot-Web

      - name: make zip
        run: |
          cd dist/
          ls -la
          zip -r WaiterRobot-Web-localfire.zip ./WaiterRobot-Web >> /dev/null
          cd -

      - name: copy build to release server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./dist/WaiterRobot-Web-localfire.zip
          remote: /var/www/datepoll-share/WaiterRobot/Web-Releases/WaiterRobot-Web-localfire.zip
          host: ${{ secrets.RELEASES_SSH_HOST }}
          port: ${{ secrets.RELEASES_SSH_PORT }}
          username: ${{ secrets.RELEASES_SSH_USER }}
          privateKey: ${{ secrets.RELEASES_SSH_PRIVATE_KEY }}

  deploy-localfire:
    needs: [publish-localfire]
    name: Deploy localfire
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: fetching new version on lava server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.LAVA_SSH_HOST }}
          username: ${{ secrets.LAVA_SSH_USER }}
          key: ${{ secrets.LOCALFIRE_SSH_PRIVATE_KEY }}
          port: ${{ secrets.LAVA_SSH_PORT }}
          script: cd /opt/localfire && ./frontend.sh -v localfire -f -c -o
