name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-testing:
    name: Build release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@master

      - name: setup node and pnpm
        uses: ./.github/actions/setup-node-pnpm

      - name: install dependencies
        run: pnpm install --ignore-scripts

      - name: install dependencies
        run: pnpm install

      - name: build
        run: |
          pnpm ngcc # Run npm-script ngcc, if ng build does it, the ci breaks (not enough memory)
          pnpm build:prod

      - uses: actions/upload-artifact@master
        name: create ${{ matrix.lib }} artifact
        with:
          name: WaiterRobot-Web-prod
          path: ./dist/WaiterRobot-Web
          retention-days: 1

  deploy-prod:
    name: Deploy prod
    runs-on: ubuntu-latest
    steps:
      - name: get WaiterRobot-Web version
        id: get-version
        shell: bash
        run: |
          echo "VERSION=$(node -p "require('./dist/package.json').version")" >> $GITHUB_OUTPUT
          echo "version: $VERSION"

      - name: zipping
        shell: bash
        run: |
          mkdir releases
          zip -r "WaiterRobot-Web-latest.zip" ./dist >> /dev/null
          zip -r "WaiterRobot-Web-v${{ steps.get-version.outputs.VERSION }}.zip" ./dist >> /dev/null
          mv "WaiterRobot-Web-latest.zip" ./releases
          mv "WaiterRobot-Web-v${{ steps.get-version.outputs.VERSION }}.zip" ./releases

      - name: releases lookup
        run: |
          cd releases
          ls -la
          cd -

      - name: move zips to release server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./releases
          remote: /var/www/datepoll-share/WaiterRobot/Web-Releases
          host: ${{ secrets.RELEASES_SSH_HOST }}
          port: ${{ secrets.RELEASES_SSH_PORT }}
          username: ${{ secrets.RELEASES_SSH_USER }}
          privateKey: ${{ secrets.RELEASES_SSH_PRIVATE_KEY }}
#      - name: fetching new version on test server
#        uses: appleboy/ssh-action@master
#        with:
#            host: ${{ secrets.DEMO_SSH_HOST }}
#            username: ${{ secrets.DEMO_SSH_USER }}
#            key: ${{ secrets.DEMO_SSH_PRIVATE_KEY }}
#            port: ${{ secrets.DEMO_SSH_PORT }}
#            script: cd /opt/waiterrobot-web && ./frontend.sh -v dev -f
